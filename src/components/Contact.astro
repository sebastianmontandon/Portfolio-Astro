---
---

<section id="contact" class="relative py-20 bg-dark-900 overflow-hidden">
  {/* Decorative elements */}
  <div class="absolute inset-0 opacity-10">
    <div class="absolute top-0 right-0 w-1/2 h-1/2 bg-primary-500/10 rounded-full filter blur-3xl"></div>
    <div class="absolute bottom-0 left-0 w-1/2 h-1/2 bg-primary-400/10 rounded-full filter blur-3xl"></div>
  </div>
  
  <div class="relative z-10 container mx-auto px-4 sm:px-6 lg:px-8">
    {/* Section Header */}
    <div class="text-center mb-16" data-aos="fade-up">
      <span class="text-primary-400 font-mono text-sm tracking-wider">GET IN TOUCH</span>
      <h2 class="text-4xl md:text-5xl font-bold mt-3 mb-4 bg-gradient-to-r from-white to-gray-300 bg-clip-text text-transparent">
        Contact <span class="text-primary-400">Me</span>
      </h2>
      <div class="w-20 h-1 bg-gradient-to-r from-primary-500 to-primary-300 mx-auto rounded-full"></div>
    </div>
    
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-12">
      {/* Left column - Contact Info */}
      <div data-aos="fade-right">
        <h3 class="text-2xl font-bold text-white mb-8">Let's work together on your next project</h3>
        
        <p class="text-gray-300 mb-8 leading-relaxed">
          I'm always interested in hearing about new projects and opportunities. Whether you have a question or just want to say hi, I'll try my best to get back to you as soon as possible.
        </p>
        
        <div class="space-y-6">
          {/* Email */}
          <div class="flex items-start gap-4 p-4 bg-dark-800/50 rounded-xl border border-dark-700/50 hover:border-primary-400/30 transition-all duration-300 hover:-translate-y-1">
            <div class="flex-shrink-0 w-12 h-12 bg-gradient-to-br from-primary-500/20 to-primary-400/10 rounded-lg flex items-center justify-center text-primary-400">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
              </svg>
            </div>
            <div>
              <h4 class="text-lg font-medium text-white">Email</h4>
              <a href="mailto:sam171990@gmail.com" class="text-primary-400 hover:underline transition-colors duration-300">sam171990@gmail.com</a>
            </div>
          </div>
          
          {/* Location */}
          <div class="flex items-start gap-4 p-4 bg-dark-800/50 rounded-xl border border-dark-700/50 hover:border-primary-400/30 transition-all duration-300 hover:-translate-y-1">
            <div class="flex-shrink-0 w-12 h-12 bg-gradient-to-br from-primary-500/20 to-primary-400/10 rounded-lg flex items-center justify-center text-primary-400">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
              </svg>
            </div>
            <div>
              <h4 class="text-lg font-medium text-white">Location</h4>
              <p class="text-gray-400">Montevideo, Uruguay</p>
            </div>
          </div>
          
          {/* Social Links */}
          <div class="pt-4">
            <h4 class="text-lg font-medium text-white mb-4">Follow Me</h4>
            <div class="flex gap-3">
              <a 
                href="https://github.com/sebastianmontandon" 
                target="_blank" 
                rel="noopener noreferrer"
                class="w-12 h-12 bg-dark-700/50 hover:bg-primary-500/10 rounded-xl flex items-center justify-center text-gray-400 hover:text-primary-400 border border-dark-600/50 hover:border-primary-400/30 transition-all duration-300 transform hover:-translate-y-0.5"
                aria-label="GitHub Profile"
              >
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M12 0C5.37 0 0 5.37 0 12c0 5.31 3.435 9.795 8.205 11.385.6.105.825-.255.825-.57 0-.285-.015-1.23-.015-2.235-3.015.555-3.795-.735-4.035-1.41-.135-.345-.72-1.41-1.23-1.695-.42-.225-1.02-.78-.015-.795.945-.015 1.62.87 1.845 1.23 1.08 1.815 2.805 1.305 3.495.99.105-.78.42-1.305.765-1.605-2.67-.3-5.46-1.335-5.46-5.925 0-1.305.465-2.385 1.23-3.225-.12-.3-.54-1.53.12-3.18 0 0 1.005-.315 3.3 1.23.96-.27 1.98-.405 3-.405s2.04.135 3 .405c2.295-1.56 3.3-1.23 3.3-1.23.66 1.65.24 2.88.12 3.18.765.84 1.23 1.905 1.23 3.225 0 4.605-2.805 5.625-5.475 5.925.435.375.81 1.095.81 2.22 0 1.605-.015 2.895-.015 3.3 0 .315.225.69.825.57C20.565 21.795 24 17.295 24 12c0-6.63-5.37-12-12-12z"/>
                </svg>
              </a>
              <a 
                href="https://linkedin.com/in/sebastian-montandon" 
                target="_blank" 
                rel="noopener noreferrer"
                class="w-12 h-12 bg-dark-700/50 hover:bg-primary-500/10 rounded-xl flex items-center justify-center text-gray-400 hover:text-primary-400 border border-dark-600/50 hover:border-primary-400/30 transition-all duration-300 transform hover:-translate-y-0.5"
                aria-label="LinkedIn Profile"
              >
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
                </svg>
              </a>
              <a 
                href="https://twitter.com/seba_montandon" 
                target="_blank" 
                rel="noopener noreferrer"
                class="w-12 h-12 bg-dark-700/50 hover:bg-primary-500/10 rounded-xl flex items-center justify-center text-gray-400 hover:text-primary-400 border border-dark-600/50 hover:border-primary-400/30 transition-all duration-300 transform hover:-translate-y-0.5"
                aria-label="Twitter Profile"
              >
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/>
                </svg>
              </a>
            </div>
          </div>
        </div>
      </div>
      
      {/* Right column - Contact Form */}
      <div class="bg-dark-800/50 backdrop-blur-sm rounded-2xl p-8 border border-dark-700/50" data-aos="fade-left">
        <h3 class="text-2xl font-bold text-white mb-6">Send me a message</h3>
        
        <form id="contact-form" class="space-y-6">
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <label for="name" class="block text-sm font-medium text-gray-300 mb-2">Your Name</label>
              <input 
                type="text" 
                id="name" 
                name="name" 
                required 
                class="w-full px-4 py-3 bg-dark-700/50 border border-dark-600/50 rounded-lg text-white placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-primary-500/50 focus:border-transparent transition-all duration-300"
                placeholder="John Doe"
              />
            </div>
            <div>
              <label for="email" class="block text-sm font-medium text-gray-300 mb-2">Email Address</label>
              <input 
                type="email" 
                id="email" 
                name="email" 
                required 
                class="w-full px-4 py-3 bg-dark-700/50 border border-dark-600/50 rounded-lg text-white placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-primary-500/50 focus:border-transparent transition-all duration-300"
                placeholder="you@example.com"
              />
            </div>
          </div>
          
          <div>
            <label for="subject" class="block text-sm font-medium text-gray-300 mb-2">Subject</label>
            <input 
              type="text" 
              id="subject" 
              name="subject" 
              required 
              class="w-full px-4 py-3 bg-dark-700/50 border border-dark-600/50 rounded-lg text-white placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-primary-500/50 focus:border-transparent transition-all duration-300"
              placeholder="How can I help you?"
            />
          </div>
          
          <div>
            <label for="message" class="block text-sm font-medium text-gray-300 mb-2">Your Message</label>
            <textarea 
              id="message" 
              name="message" 
              rows="5" 
              required 
              class="w-full px-4 py-3 bg-dark-700/50 border border-dark-600/50 rounded-lg text-white placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-primary-500/50 focus:border-transparent transition-all duration-300"
              placeholder="Tell me about your project..."
            ></textarea>
          </div>
          
          <div>
            <button 
              type="submit" 
              class="w-full px-6 py-3.5 bg-gradient-to-r from-primary-500 to-primary-400 hover:from-primary-600 hover:to-primary-500 text-white font-medium rounded-lg transition-all duration-300 transform hover:-translate-y-0.5 hover:shadow-lg hover:shadow-primary-500/20 flex items-center justify-center"
            >
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
              </svg>
              Send Message
            </button>
          </div>
          
          <div id="form-status" class="hidden"></div>
        </form>
      </div>
    </div>
  </div>
  
  {/* Decorative elements bottom */}
  <div class="absolute bottom-0 left-0 right-0 h-32 bg-gradient-to-t from-dark-900 to-transparent"></div>
</section>

<style>
  /* Form input focus styles */
  input:focus, textarea:focus {
    box-shadow: 0 0 0 2px rgba(0, 194, 184, 0.2);
  }
  
  /* Custom scrollbar for textarea */
  textarea::-webkit-scrollbar {
    width: 6px;
  }
  
  textarea::-webkit-scrollbar-track {
    background: #1a1a1a;
    border-radius: 3px;
  }
  
  textarea::-webkit-scrollbar-thumb {
    background: #00c2b8;
    border-radius: 3px;
  }
  
  textarea::-webkit-scrollbar-thumb:hover {
    background: #00a39b;
  }
  
  /* Animation for form elements */
  form > div {
    opacity: 0;
    transform: translateY(20px);
    animation: fadeInUp 0.5s ease-out forwards;
  }
  
  form > div:nth-child(1) { animation-delay: 0.1s; }
  form > div:nth-child(2) { animation-delay: 0.2s; }
  form > div:nth-child(3) { animation-delay: 0.3s; }
  form > div:nth-child(4) { animation-delay: 0.4s; }
  form > div:nth-child(5) { animation-delay: 0.5s; }
  
  @keyframes fadeInUp {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>

<script>
  // Client-side form handling
  if (typeof window !== 'undefined') {
    document.addEventListener('DOMContentLoaded', () => {
      const form = document.getElementById('contact-form') as HTMLFormElement | null;
      const statusMessage = document.getElementById('form-status');
      const submitButton = form?.querySelector('button[type="submit"]') as HTMLButtonElement | null;
      
      if (!form || !statusMessage || !submitButton) return;

      const handleSubmit = async (event: SubmitEvent) => {
        event.preventDefault();
        
        const form = event.target as HTMLFormElement;
        const formData = new FormData(form);
        
        try {
          // Disable submit button and show loading state
          submitButton.disabled = true;
          submitButton.innerHTML = `
            <svg class="animate-spin -ml-1 mr-2 h-4 w-4 text-white inline-block" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
              <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
            </svg>
            Sending...
          `;
          
          // Show status message
          if (statusMessage) {
            statusMessage.className = 'mt-4 p-3 bg-blue-500/10 border border-blue-500/30 text-blue-400 rounded-lg text-sm';
            statusMessage.textContent = 'Sending your message...';
            statusMessage.classList.remove('hidden');
          }
          
          // Get form data
          const formValues = {
            name: formData.get('name') as string,
            email: formData.get('email') as string,
            subject: formData.get('subject') as string,
            message: formData.get('message') as string
          };
          
          // Send form data to Vercel API route
          const response = await fetch('/api/contact', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(formValues)
          });
          
          const data = await response.json();
          
          if (!response.ok) {
            throw new Error(data.error || 'Failed to send message');
          }
          
          // Show success message
          if (statusMessage) {
            statusMessage.textContent = 'Message sent successfully! I\'ll get back to you soon!';
            statusMessage.className = 'mt-4 p-3 bg-green-500/10 border border-green-500/30 text-green-400 rounded-lg text-sm';
          }
          form.reset();
          
        } catch (error) {
          console.error('Error:', error);
          if (statusMessage) {
            statusMessage.textContent = 'There was an error sending your message. Please try again or email me directly at sam171990@gmail.com';
            statusMessage.className = 'mt-4 p-3 bg-red-500/10 border border-red-500/30 text-red-400 rounded-lg text-sm';
          }
        } finally {
          // Re-enable submit button
          if (submitButton) {
            submitButton.disabled = false;
            submitButton.innerHTML = `
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
              </svg>
              Send Message
            `;
          }
          
          // Hide status message after 5 seconds for success, 10 for errors
          if (statusMessage) {
            const isError = statusMessage.className.includes('bg-red-500/10');
            const hideMessage = () => {
              if (statusMessage) {
                statusMessage.classList.add('hidden');
              }
            };
            
            if (isError) {
              // Keep error messages visible longer
              setTimeout(hideMessage, 10000);
            } else {
              setTimeout(hideMessage, 5000);
            }
          }
        }
      };

      form.addEventListener('submit', handleSubmit);
    });
  }
</script>