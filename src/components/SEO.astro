---
interface Props {
  title: string;
  description: string;
  image?: string;
  type?: 'website' | 'article';
  publishedTime?: string;
  modifiedTime?: string;
}

const {
  title,
  description,
  image = '/og-image.jpg',
  type = 'website',
  publishedTime,
  modifiedTime
} = Astro.props;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const siteName = "Sebastián Montandon | Backend Developer";
const siteURL = "https://sebastianmontandon.dev";
---

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Open Graph Meta Tags -->
<meta property="og:type" content={type} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image, siteURL)} />
<meta property="og:url" content={canonicalURL} />
<meta property="og:site_name" content={siteName} />
<meta property="og:locale" content="en_US" />
{publishedTime && <meta property="article:published_time" content={publishedTime} />}
{modifiedTime && <meta property="article:modified_time" content={modifiedTime} />}

<!-- Twitter Card Meta Tags -->
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:title" content={title} />
<meta name="twitter:description" content={description} />
<meta name="twitter:image" content={new URL(image, siteURL)} />

<!-- Additional Project Schema if applicable -->
{type === 'article' && (
  <script type="application/ld+json">
    {JSON.stringify({
      "@context": "https://schema.org",
      "@type": "Article",
      "headline": title,
      "description": description,
      "image": new URL(image, siteURL),
      "author": {
        "@type": "Person",
        "name": "Sebastián Montandon"
      },
      "publisher": {
        "@type": "Person",
        "name": "Sebastián Montandon"
      },
      "datePublished": publishedTime,
      "dateModified": modifiedTime || publishedTime,
      "url": canonicalURL
    })}
  </script>
)}
