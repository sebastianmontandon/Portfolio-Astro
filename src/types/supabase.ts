/**
 * This file contains TypeScript types for your Supabase database schema.
 * These types are automatically generated by the Supabase CLI.
 * You can regenerate these types by running:
 *   npx supabase gen types typescript --project-id your-project-ref > src/types/supabase.ts
 */

export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export interface Database {
  public: {
    Tables: {
      projects: {
        Row: {
          id: string
          created_at: string
          updated_at: string
          title: string
          description: string
          technologies: string[]
          github_url: string | null
          live_url: string | null
          image_url: string
          category: string | null
          is_featured: boolean
          slug: string
          content: string | null
          demo_video_url: string | null
          tags: string[] | null
          featured_image: string | null
          gallery: string[] | null
          published: boolean
          published_at: string | null
          ai_assisted: boolean
          in_development: boolean
        }
        Insert: {
          id?: string
          created_at?: string
          updated_at?: string
          title: string
          description: string
          technologies: string[]
          github_url?: string | null
          live_url?: string | null
          image_url: string
          category?: string | null
          is_featured?: boolean
          slug: string
          content?: string | null
          demo_video_url?: string | null
          tags?: string[] | null
          featured_image?: string | null
          gallery?: string[] | null
          published?: boolean
          published_at?: string | null
          ai_assisted?: boolean
          in_development?: boolean
        }
        Update: {
          id?: string
          created_at?: string
          updated_at?: string
          title?: string
          description?: string
          technologies?: string[]
          github_url?: string | null
          live_url?: string | null
          image_url?: string
          category?: string | null
          is_featured?: boolean
          slug?: string
          content?: string | null
          demo_video_url?: string | null
          tags?: string[] | null
          featured_image?: string | null
          gallery?: string[] | null
          published?: boolean
          published_at?: string | null
          ai_assisted?: boolean
          in_development?: boolean
        }
      }
      // Add other tables as needed
    }
    Views: {
      [_ in never]: never
    }
    Functions: {
      [_ in never]: never
    }
    Enums: {
      [_ in never]: never
    }
    CompositeTypes: {
      [_ in never]: never
    }
  }
}

// Helper type for table row types
export type Tables<T extends keyof Database['public']['Tables']> = Database['public']['Tables'][T]['Row']

// Helper type for insert types
export type InsertTables<T extends keyof Database['public']['Tables']> = Database['public']['Tables'][T]['Insert']

// Helper type for update types
export type UpdateTables<T extends keyof Database['public']['Tables']> = Database['public']['Tables'][T]['Update']

// Helper type for enums
export type Enums<T extends keyof Database['public']['Enums']> = Database['public']['Enums'][T]
